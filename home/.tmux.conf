set -g default-terminal "screen-256color"
set -g base-index 1
setw -g pane-base-index 1

set -g prefix `
unbind C-b
bind-key ` send-prefix

# 从tmux v1.6版起，支持设置第二个指令前缀
# set-option -g prefix2 `

set -g history-limit 50000

unbind '"'
bind - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板
unbind %
bind \ splitw -h -c '#{pane_current_path}' # 水平方向新增面板

set -g mouse on

# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=

# 绑定hjkl键为面板切换的上下左右键
bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

bind -r e lastp # 选择最后一个面板
bind -r ^e last # 选择最后一个窗口

bind -r ^u swapp -U # 与前一个面板交换位置
bind -r ^d swapp -D # 与后一个面板交换位置

# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
bind -r ^k resizep -U 10 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
bind -r ^j resizep -D 10 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
bind -r ^h resizep -L 10 # 绑定Ctrl+h为往←调整面板边缘10个单元格
bind -r ^l resizep -R 10 # 绑定Ctrl+l为往→调整面板边缘10个单元格

#join-pane -s window01 # 合并名称为window01的窗口的默认（第一个）面板到当前窗口中
#join-pane -s window01.1 # .1显式指定了第一个面板，.2就是第二个面板(我本地将面板编号起始值设置为1，默认是0)

bind m command-prompt "splitw -h 'exec man %%'"   # 绑定m键为在新的panel打开man
# 绑定P键为开启日志功能，如下，面板的输出日志将存储到桌面
bind P pipe-pane -o "cat >>~/Desktop/#W.log" \; display "Toggled logging to ~/Desktop/#W.log"

set -g status-interval 1 # 状态栏刷新时间
set -g status-justify left # 状态栏列表左对齐

set -g status-style "bg=#333333, fg=white"
set -g status-left "#[bg=#FF661D] ❐ #S " # 状态栏左侧内容
set -g status-right '%y-%m-%d[%w]%H:%M:%S' # 状态栏右侧内容
set -g status-left-length 300 # 状态栏左边长度300
set -g status-right-length 500 # 状态栏左边长度500


set -wg window-status-format ' #[fg=white,bold]#I:#[fg=green]#{pane_current_path}#[fg=blue][#W]#[fg=white] '
set -wg window-status-current-format ' #[fg=white,bold]#I:#[fg=cyan]#{pane_current_path}#[fg=blue][#W]#[fg=white]#F '

set -wg window-status-separator ""
set -wg window-status-current-style "bg=black" # 状态栏当前窗口名称的样式
set -wg window-status-last-style "fg=yellow" # 状态栏最后一个窗口名称的样式

setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知
set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色

# setw -g automatic-rename off
# setw -g allow-rename off

setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# buffer缓存复制到Linux系统粘贴板
bind C-c run " tmux save-buffer - | xclip -i -sel clipboard"
# Linux系统粘贴板内容复制到会话
bind C-v run " tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Selection with mouse should copy to clipboard right away, in addition to the default action.
unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"

# Middle click to paste from the clipboard
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
